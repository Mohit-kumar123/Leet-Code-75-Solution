class Solution {
public:
    bool closeStrings(string word1, string word2) {
       if(word1.length()!=word2.length()){
        return false;
       }


       unordered_map<char,int> freq1,freq2;
       unordered_set<char> chars1,chars2;

       for(char c:word1){
        freq1[c]++;
        chars1.insert(c);
       }

       for(char c:word2){
        freq2[c]++;
        chars2.insert(c);
       }

       if(chars1!=chars2){
        return false;
       }

       vector<int> freq1values,freq2values;
       for(auto& [key,value]: freq1){
        freq1values.push_back(value);
       }
       for(auto& [key,value]: freq2){
        freq2values.push_back(value);
       }

       sort(freq1values.begin(),freq1values.end());
       sort(freq2values.begin(),freq2values.end());

       return freq1values == freq2values;

    }
};
